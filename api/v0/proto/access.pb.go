// Code generated by protoc-gen-go. DO NOT EDIT.
// source: access.proto

package v0

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccessProtocol struct {
	// Types that are valid to be assigned to Method:
	//	*AccessProtocol_AuthLevel
	//	*AccessProtocol_User
	//	*AccessProtocol_UserSet
	Method               isAccessProtocol_Method `protobuf_oneof:"Method"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AccessProtocol) Reset()         { *m = AccessProtocol{} }
func (m *AccessProtocol) String() string { return proto.CompactTextString(m) }
func (*AccessProtocol) ProtoMessage()    {}
func (*AccessProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_access_ef7e3587c4dfe863, []int{0}
}
func (m *AccessProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessProtocol.Unmarshal(m, b)
}
func (m *AccessProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessProtocol.Marshal(b, m, deterministic)
}
func (dst *AccessProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessProtocol.Merge(dst, src)
}
func (m *AccessProtocol) XXX_Size() int {
	return xxx_messageInfo_AccessProtocol.Size(m)
}
func (m *AccessProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_AccessProtocol proto.InternalMessageInfo

type isAccessProtocol_Method interface {
	isAccessProtocol_Method()
}

type AccessProtocol_AuthLevel struct {
	AuthLevel int32 `protobuf:"varint,1,opt,name=AuthLevel,proto3,oneof"`
}
type AccessProtocol_User struct {
	User string `protobuf:"bytes,2,opt,name=User,proto3,oneof"`
}
type AccessProtocol_UserSet struct {
	UserSet string `protobuf:"bytes,3,opt,name=UserSet,proto3,oneof"`
}

func (*AccessProtocol_AuthLevel) isAccessProtocol_Method() {}
func (*AccessProtocol_User) isAccessProtocol_Method()      {}
func (*AccessProtocol_UserSet) isAccessProtocol_Method()   {}

func (m *AccessProtocol) GetMethod() isAccessProtocol_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *AccessProtocol) GetAuthLevel() int32 {
	if x, ok := m.GetMethod().(*AccessProtocol_AuthLevel); ok {
		return x.AuthLevel
	}
	return 0
}

func (m *AccessProtocol) GetUser() string {
	if x, ok := m.GetMethod().(*AccessProtocol_User); ok {
		return x.User
	}
	return ""
}

func (m *AccessProtocol) GetUserSet() string {
	if x, ok := m.GetMethod().(*AccessProtocol_UserSet); ok {
		return x.UserSet
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AccessProtocol) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AccessProtocol_OneofMarshaler, _AccessProtocol_OneofUnmarshaler, _AccessProtocol_OneofSizer, []interface{}{
		(*AccessProtocol_AuthLevel)(nil),
		(*AccessProtocol_User)(nil),
		(*AccessProtocol_UserSet)(nil),
	}
}

func _AccessProtocol_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AccessProtocol)
	// Method
	switch x := m.Method.(type) {
	case *AccessProtocol_AuthLevel:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.AuthLevel))
	case *AccessProtocol_User:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.User)
	case *AccessProtocol_UserSet:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.UserSet)
	case nil:
	default:
		return fmt.Errorf("AccessProtocol.Method has unexpected type %T", x)
	}
	return nil
}

func _AccessProtocol_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AccessProtocol)
	switch tag {
	case 1: // Method.AuthLevel
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Method = &AccessProtocol_AuthLevel{int32(x)}
		return true, err
	case 2: // Method.User
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Method = &AccessProtocol_User{x}
		return true, err
	case 3: // Method.UserSet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Method = &AccessProtocol_UserSet{x}
		return true, err
	default:
		return false, nil
	}
}

func _AccessProtocol_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AccessProtocol)
	// Method
	switch x := m.Method.(type) {
	case *AccessProtocol_AuthLevel:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.AuthLevel))
	case *AccessProtocol_User:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.User)))
		n += len(x.User)
	case *AccessProtocol_UserSet:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.UserSet)))
		n += len(x.UserSet)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*AccessProtocol)(nil), "v0.AccessProtocol")
}

func init() { proto.RegisterFile("access.proto", fileDescriptor_access_ef7e3587c4dfe863) }

var fileDescriptor_access_ef7e3587c4dfe863 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4c, 0x4e, 0x4e,
	0x2d, 0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x33, 0x50, 0xca, 0xe1, 0xe2,
	0x73, 0x04, 0x8b, 0x05, 0x80, 0x84, 0x92, 0xf3, 0x73, 0x84, 0xe4, 0xb8, 0x38, 0x1d, 0x4b, 0x4b,
	0x32, 0x7c, 0x52, 0xcb, 0x52, 0x73, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x3d, 0x18, 0x82, 0x10,
	0x42, 0x42, 0x22, 0x5c, 0x2c, 0xa1, 0xc5, 0xa9, 0x45, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x1e,
	0x0c, 0x41, 0x60, 0x9e, 0x90, 0x14, 0x17, 0x3b, 0x88, 0x0e, 0x4e, 0x2d, 0x91, 0x60, 0x86, 0x4a,
	0xc0, 0x04, 0x9c, 0x38, 0xb8, 0xd8, 0x7c, 0x53, 0x4b, 0x32, 0xf2, 0x53, 0x9c, 0x58, 0xa2, 0x98,
	0xca, 0x0c, 0x92, 0xd8, 0xc0, 0xd6, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x58, 0xaf, 0xf6,
	0x53, 0x8e, 0x00, 0x00, 0x00,
}
