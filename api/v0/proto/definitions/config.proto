syntax = "proto3";
package v0;
option go_package = "v0";

import "google/protobuf/any.proto";
import "validate/validate.proto";
import "header.proto";
import "signatures.proto";

/*
Config objects are user signed configuration files, creating Owners, Users, Wallets and more depending on the injected
handlers. Configs are always signed by the users, ordered through the Header.Increment field, and have multiple purposes.

    example:
        config: {
            Header: {
                    ApiVersion: "v0",
                    Kind: "UserSet",
                    Increment: 2,
                }
            Spec: {
                {UserSet}
                }

            Witness: {
                {Witness}
                }
            }

    This config targets v0, provides a UserSet, and is the second configuration sent to the node. (the first one is OwnerSet).
    If valid, this will create/alter a UserSet, creating/altering/deleting users in the set.

    Only if the set is valid and properly handled does the Increment increase.
*/
message Config {
    Header Header = 1 [(validate.rules).message.required = true];
    Witness Witness = 2 [(validate.rules).message.required = true];
    google.protobuf.Any Spec = 4 [(validate.rules).message.required = true];
}

