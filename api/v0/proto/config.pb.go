// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package v0

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Config objects are user signed configuration files, creating Owners, Users, Wallets and more depending on the injected
// handlers. Configs are always signed by the users, ordered through the Header.Increment field, and have multiple purposes.
//
// example:
// config: {
// Header: {
// ApiVersion: "v0",
// Kind: "UserSet",
// Increment: 2,
// }
// Spec: {
// {UserSet}
// }
//
// Witness: {
// {Witness}
// }
// }
//
// This config targets v0, provides a UserSet, and is the second configuration sent to the node. (the first one is OwnerSet).
// If valid, this will create/alter a UserSet, creating/altering/deleting users in the set.
//
// Only if the set is valid and properly handled does the Increment increase.
type Config struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Witness              *Witness `protobuf:"bytes,2,opt,name=Witness,proto3" json:"Witness,omitempty"`
	Spec                 *any.Any `protobuf:"bytes,4,opt,name=Spec,proto3" json:"Spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_434f70d9b0a5004b, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Config) GetWitness() *Witness {
	if m != nil {
		return m.Witness
	}
	return nil
}

func (m *Config) GetSpec() *any.Any {
	if m != nil {
		return m.Spec
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "v0.Config")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_434f70d9b0a5004b) }

var fileDescriptor_config_434f70d9b0a5004b = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0x4b,
	0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x33, 0x90, 0x92, 0x4c, 0xcf,
	0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x24, 0x95, 0xa6, 0xe9, 0x27, 0xe6, 0x55, 0x42, 0xa4,
	0xa5, 0xc4, 0xcb, 0x12, 0x73, 0x32, 0x53, 0x12, 0x4b, 0x52, 0xf5, 0x61, 0x0c, 0xa8, 0x04, 0x4f,
	0x46, 0x6a, 0x62, 0x4a, 0x6a, 0x11, 0x94, 0x27, 0x50, 0x9c, 0x99, 0x9e, 0x97, 0x58, 0x52, 0x5a,
	0x94, 0x5a, 0x0c, 0x11, 0x51, 0x5a, 0xc8, 0xc8, 0xc5, 0xe6, 0x0c, 0xb6, 0x48, 0x48, 0x8f, 0x8b,
	0xcd, 0x03, 0xac, 0x58, 0x82, 0x51, 0x81, 0x51, 0x83, 0xdb, 0x88, 0x4b, 0xaf, 0xcc, 0x40, 0x0f,
	0x22, 0xe2, 0xc4, 0xb5, 0xeb, 0xe5, 0x01, 0x66, 0xd6, 0x2e, 0x46, 0x26, 0x01, 0xc6, 0x20, 0xa8,
	0x2a, 0x21, 0x43, 0x2e, 0xf6, 0xf0, 0xcc, 0x92, 0xbc, 0xd4, 0xe2, 0x62, 0x09, 0x26, 0xb0, 0x06,
	0x6e, 0x90, 0x06, 0xa8, 0x10, 0x8a, 0x0e, 0x98, 0x3a, 0x21, 0x13, 0x2e, 0x96, 0xe0, 0x82, 0xd4,
	0x64, 0x09, 0x16, 0xb0, 0x7a, 0x11, 0x3d, 0x88, 0x87, 0xf4, 0x60, 0x1e, 0xd2, 0x73, 0xcc, 0xab,
	0x44, 0xd1, 0x08, 0x56, 0xed, 0xc4, 0x12, 0xc5, 0x54, 0x66, 0x90, 0xc4, 0x06, 0x56, 0x65, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x69, 0x17, 0x3e, 0x18, 0x01, 0x00, 0x00,
}
