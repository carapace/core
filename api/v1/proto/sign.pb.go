// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sign.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SigningPayload struct {
	Payload              []byte      `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Signatures           *Signatures `protobuf:"bytes,2,opt,name=Signatures,proto3" json:"Signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SigningPayload) Reset()         { *m = SigningPayload{} }
func (m *SigningPayload) String() string { return proto.CompactTextString(m) }
func (*SigningPayload) ProtoMessage()    {}
func (*SigningPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_sign_b44b1ba8a3c7a2c9, []int{0}
}
func (m *SigningPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SigningPayload.Unmarshal(m, b)
}
func (m *SigningPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SigningPayload.Marshal(b, m, deterministic)
}
func (dst *SigningPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SigningPayload.Merge(dst, src)
}
func (m *SigningPayload) XXX_Size() int {
	return xxx_messageInfo_SigningPayload.Size(m)
}
func (m *SigningPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_SigningPayload.DiscardUnknown(m)
}

var xxx_messageInfo_SigningPayload proto.InternalMessageInfo

func (m *SigningPayload) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SigningPayload) GetSignatures() *Signatures {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type SigningPayloadResponse struct {
	Payload              []byte    `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Response             *Response `protobuf:"bytes,2,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SigningPayloadResponse) Reset()         { *m = SigningPayloadResponse{} }
func (m *SigningPayloadResponse) String() string { return proto.CompactTextString(m) }
func (*SigningPayloadResponse) ProtoMessage()    {}
func (*SigningPayloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sign_b44b1ba8a3c7a2c9, []int{1}
}
func (m *SigningPayloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SigningPayloadResponse.Unmarshal(m, b)
}
func (m *SigningPayloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SigningPayloadResponse.Marshal(b, m, deterministic)
}
func (dst *SigningPayloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SigningPayloadResponse.Merge(dst, src)
}
func (m *SigningPayloadResponse) XXX_Size() int {
	return xxx_messageInfo_SigningPayloadResponse.Size(m)
}
func (m *SigningPayloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SigningPayloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SigningPayloadResponse proto.InternalMessageInfo

func (m *SigningPayloadResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SigningPayloadResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*SigningPayload)(nil), "v1.sign.SigningPayload")
	proto.RegisterType((*SigningPayloadResponse)(nil), "v1.sign.SigningPayloadResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SigningServiceClient is the client API for SigningService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SigningServiceClient interface {
	Search(ctx context.Context, in *SigningPayload, opts ...grpc.CallOption) (*SigningPayloadResponse, error)
}

type signingServiceClient struct {
	cc *grpc.ClientConn
}

func NewSigningServiceClient(cc *grpc.ClientConn) SigningServiceClient {
	return &signingServiceClient{cc}
}

func (c *signingServiceClient) Search(ctx context.Context, in *SigningPayload, opts ...grpc.CallOption) (*SigningPayloadResponse, error) {
	out := new(SigningPayloadResponse)
	err := c.cc.Invoke(ctx, "/v1.sign.SigningService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SigningServiceServer is the server API for SigningService service.
type SigningServiceServer interface {
	Search(context.Context, *SigningPayload) (*SigningPayloadResponse, error)
}

func RegisterSigningServiceServer(s *grpc.Server, srv SigningServiceServer) {
	s.RegisterService(&_SigningService_serviceDesc, srv)
}

func _SigningService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SigningPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SigningServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.sign.SigningService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SigningServiceServer).Search(ctx, req.(*SigningPayload))
	}
	return interceptor(ctx, in, info, handler)
}

var _SigningService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.sign.SigningService",
	HandlerType: (*SigningServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _SigningService_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sign.proto",
}

func init() { proto.RegisterFile("sign.proto", fileDescriptor_sign_b44b1ba8a3c7a2c9) }

var fileDescriptor_sign_b44b1ba8a3c7a2c9 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xce, 0x4c, 0xcf,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x33, 0xd4, 0x03, 0x71, 0xa5, 0xf8, 0x32,
	0x53, 0x52, 0xf3, 0x4a, 0x32, 0x4b, 0x2a, 0x21, 0x12, 0x52, 0x7c, 0x45, 0xa9, 0xc5, 0x05, 0xf9,
	0x79, 0xc5, 0xa9, 0x10, 0xbe, 0x52, 0x1c, 0x17, 0x5f, 0x70, 0x66, 0x7a, 0x5e, 0x66, 0x5e, 0x7a,
	0x40, 0x62, 0x65, 0x4e, 0x7e, 0x62, 0x8a, 0x90, 0x04, 0x17, 0x3b, 0x94, 0x29, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x13, 0x04, 0xe3, 0x0a, 0x19, 0x71, 0x71, 0x81, 0xd4, 0x26, 0x96, 0x94, 0x16, 0xa5,
	0x16, 0x4b, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x1b, 0x09, 0xe9, 0x95, 0x19, 0xea, 0x79, 0x3a, 0xfa,
	0xea, 0x21, 0x64, 0x82, 0x90, 0x54, 0x29, 0xa5, 0x72, 0x89, 0xa1, 0x9a, 0x1f, 0x04, 0xb5, 0x1f,
	0x8f, 0x3d, 0x86, 0x5c, 0x1c, 0x30, 0x55, 0x50, 0x5b, 0x44, 0x41, 0xb6, 0xc0, 0x5d, 0x0e, 0x93,
	0x0c, 0x82, 0x2b, 0x33, 0x0a, 0x81, 0x7b, 0x23, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8,
	0x89, 0x8b, 0x2d, 0x38, 0x35, 0xb1, 0x28, 0x39, 0x43, 0x48, 0x5c, 0x0f, 0x1a, 0x18, 0x7a, 0xa8,
	0x2e, 0x91, 0x92, 0xc7, 0x21, 0x01, 0x33, 0xd5, 0x89, 0x25, 0x8a, 0xa9, 0xcc, 0x30, 0x89, 0x0d,
	0x1c, 0x52, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x78, 0xf3, 0xaf, 0xb5, 0x60, 0x01, 0x00,
	0x00,
}
