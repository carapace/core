// Code generated by protoc-gen-go. DO NOT EDIT.
// source: definitions/gateway.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodePost struct {
	Asset                Asset    `protobuf:"varint,1,opt,name=Asset,proto3,enum=IAM.Asset" json:"Asset,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Endpoint             string   `protobuf:"bytes,3,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Headers              []string `protobuf:"bytes,4,rep,name=Headers,proto3" json:"Headers,omitempty"`
	Body                 []byte   `protobuf:"bytes,5,opt,name=Body,proto3" json:"Body,omitempty"`
	Repeatable           bool     `protobuf:"varint,6,opt,name=Repeatable,proto3" json:"Repeatable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodePost) Reset()         { *m = NodePost{} }
func (m *NodePost) String() string { return proto.CompactTextString(m) }
func (*NodePost) ProtoMessage()    {}
func (*NodePost) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_f4db0a630236e47b, []int{0}
}
func (m *NodePost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePost.Unmarshal(m, b)
}
func (m *NodePost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePost.Marshal(b, m, deterministic)
}
func (dst *NodePost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePost.Merge(dst, src)
}
func (m *NodePost) XXX_Size() int {
	return xxx_messageInfo_NodePost.Size(m)
}
func (m *NodePost) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePost.DiscardUnknown(m)
}

var xxx_messageInfo_NodePost proto.InternalMessageInfo

func (m *NodePost) GetAsset() Asset {
	if m != nil {
		return m.Asset
	}
	return Asset_AssetUnknown
}

func (m *NodePost) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *NodePost) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *NodePost) GetHeaders() []string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *NodePost) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *NodePost) GetRepeatable() bool {
	if m != nil {
		return m.Repeatable
	}
	return false
}

type NodeGet struct {
	Asset                Asset    `protobuf:"varint,1,opt,name=Asset,proto3,enum=IAM.Asset" json:"Asset,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Endpoint             string   `protobuf:"bytes,3,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Headers              []string `protobuf:"bytes,4,rep,name=Headers,proto3" json:"Headers,omitempty"`
	Body                 []byte   `protobuf:"bytes,5,opt,name=Body,proto3" json:"Body,omitempty"`
	Repeatable           bool     `protobuf:"varint,6,opt,name=Repeatable,proto3" json:"Repeatable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeGet) Reset()         { *m = NodeGet{} }
func (m *NodeGet) String() string { return proto.CompactTextString(m) }
func (*NodeGet) ProtoMessage()    {}
func (*NodeGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_f4db0a630236e47b, []int{1}
}
func (m *NodeGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGet.Unmarshal(m, b)
}
func (m *NodeGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGet.Marshal(b, m, deterministic)
}
func (dst *NodeGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGet.Merge(dst, src)
}
func (m *NodeGet) XXX_Size() int {
	return xxx_messageInfo_NodeGet.Size(m)
}
func (m *NodeGet) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGet.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGet proto.InternalMessageInfo

func (m *NodeGet) GetAsset() Asset {
	if m != nil {
		return m.Asset
	}
	return Asset_AssetUnknown
}

func (m *NodeGet) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *NodeGet) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *NodeGet) GetHeaders() []string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *NodeGet) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *NodeGet) GetRepeatable() bool {
	if m != nil {
		return m.Repeatable
	}
	return false
}

type NodeResponse struct {
	Results              [][]byte  `protobuf:"bytes,5,rep,name=Results,proto3" json:"Results,omitempty"`
	Response             *Response `protobuf:"bytes,7,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NodeResponse) Reset()         { *m = NodeResponse{} }
func (m *NodeResponse) String() string { return proto.CompactTextString(m) }
func (*NodeResponse) ProtoMessage()    {}
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_f4db0a630236e47b, []int{2}
}
func (m *NodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResponse.Unmarshal(m, b)
}
func (m *NodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResponse.Marshal(b, m, deterministic)
}
func (dst *NodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResponse.Merge(dst, src)
}
func (m *NodeResponse) XXX_Size() int {
	return xxx_messageInfo_NodeResponse.Size(m)
}
func (m *NodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResponse proto.InternalMessageInfo

func (m *NodeResponse) GetResults() [][]byte {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *NodeResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

type Node struct {
	Asset                Asset    `protobuf:"varint,1,opt,name=Asset,proto3,enum=IAM.Asset" json:"Asset,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	Port                 string   `protobuf:"bytes,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_f4db0a630236e47b, []int{3}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetAsset() Asset {
	if m != nil {
		return m.Asset
	}
	return Asset_AssetUnknown
}

func (m *Node) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Node) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Node) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*NodePost)(nil), "IAM.NodePost")
	proto.RegisterType((*NodeGet)(nil), "IAM.NodeGet")
	proto.RegisterType((*NodeResponse)(nil), "IAM.NodeResponse")
	proto.RegisterType((*Node)(nil), "IAM.Node")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeGatewayServiceClient is the client API for NodeGatewayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeGatewayServiceClient interface {
	Post(ctx context.Context, in *NodePost, opts ...grpc.CallOption) (*NodeResponse, error)
	Get(ctx context.Context, in *NodeGet, opts ...grpc.CallOption) (*NodeResponse, error)
	Register(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Response, error)
}

type nodeGatewayServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeGatewayServiceClient(cc *grpc.ClientConn) NodeGatewayServiceClient {
	return &nodeGatewayServiceClient{cc}
}

func (c *nodeGatewayServiceClient) Post(ctx context.Context, in *NodePost, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/IAM.NodeGatewayService/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGatewayServiceClient) Get(ctx context.Context, in *NodeGet, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/IAM.NodeGatewayService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGatewayServiceClient) Register(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/IAM.NodeGatewayService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeGatewayServiceServer is the server API for NodeGatewayService service.
type NodeGatewayServiceServer interface {
	Post(context.Context, *NodePost) (*NodeResponse, error)
	Get(context.Context, *NodeGet) (*NodeResponse, error)
	Register(context.Context, *Node) (*Response, error)
}

func RegisterNodeGatewayServiceServer(s *grpc.Server, srv NodeGatewayServiceServer) {
	s.RegisterService(&_NodeGatewayService_serviceDesc, srv)
}

func _NodeGatewayService_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodePost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGatewayServiceServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IAM.NodeGatewayService/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGatewayServiceServer).Post(ctx, req.(*NodePost))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGatewayService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGatewayServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IAM.NodeGatewayService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGatewayServiceServer).Get(ctx, req.(*NodeGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGatewayService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGatewayServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IAM.NodeGatewayService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGatewayServiceServer).Register(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeGatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "IAM.NodeGatewayService",
	HandlerType: (*NodeGatewayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Post",
			Handler:    _NodeGatewayService_Post_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _NodeGatewayService_Get_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _NodeGatewayService_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "definitions/gateway.proto",
}

func init() { proto.RegisterFile("definitions/gateway.proto", fileDescriptor_gateway_f4db0a630236e47b) }

var fileDescriptor_gateway_f4db0a630236e47b = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x92, 0x41, 0x4b, 0xeb, 0x40,
	0x10, 0xc7, 0xd9, 0x26, 0x6d, 0xd3, 0x79, 0x79, 0x0f, 0xde, 0x9e, 0xf6, 0xe5, 0xf0, 0x58, 0x7a,
	0x90, 0x78, 0x89, 0x58, 0x3f, 0x41, 0x0b, 0xd2, 0xf6, 0x50, 0x29, 0x2b, 0x88, 0x78, 0x4b, 0xcd,
	0x58, 0x22, 0x25, 0x1b, 0x32, 0x6b, 0xa5, 0x1f, 0xc3, 0x4f, 0xa2, 0x1f, 0x51, 0x76, 0xd3, 0x84,
	0x08, 0x3d, 0x78, 0xf5, 0x36, 0xff, 0xf9, 0xcf, 0x4c, 0x66, 0x7f, 0x19, 0xf8, 0x97, 0xe1, 0x53,
	0x5e, 0xe4, 0x26, 0xd7, 0x05, 0x5d, 0x6c, 0x53, 0x83, 0xaf, 0xe9, 0x21, 0x29, 0x2b, 0x6d, 0x34,
	0xf7, 0x96, 0xd3, 0x55, 0x24, 0xba, 0x7e, 0x4a, 0x84, 0x86, 0x6a, 0x3b, 0x8a, 0xba, 0x4e, 0x85,
	0x54, 0xea, 0x82, 0xb0, 0xf6, 0xc6, 0x1f, 0x0c, 0x82, 0x1b, 0x9d, 0xe1, 0x5a, 0x93, 0xe1, 0x12,
	0xfa, 0x53, 0xdb, 0x28, 0x98, 0x64, 0xf1, 0x9f, 0x09, 0x24, 0xcb, 0xe9, 0x2a, 0x71, 0x19, 0x55,
	0x1b, 0x5c, 0xc0, 0xf0, 0x0e, 0x2b, 0xca, 0x75, 0x21, 0x7a, 0x92, 0xc5, 0x23, 0xd5, 0x48, 0x1e,
	0x41, 0x70, 0x5d, 0x64, 0xa5, 0xce, 0x0b, 0x23, 0x3c, 0x67, 0xb5, 0xda, 0x76, 0x2d, 0x30, 0xcd,
	0xb0, 0x22, 0xe1, 0x4b, 0xcf, 0x76, 0x1d, 0x25, 0xe7, 0xe0, 0xcf, 0x74, 0x76, 0x10, 0x7d, 0xc9,
	0xe2, 0x50, 0xb9, 0x98, 0xff, 0x07, 0x50, 0x58, 0x62, 0x6a, 0xd2, 0xcd, 0x0e, 0xc5, 0x40, 0xb2,
	0x38, 0x50, 0x9d, 0xcc, 0xf8, 0x9d, 0xc1, 0xd0, 0xae, 0x3c, 0xc7, 0x9f, 0xb2, 0xf1, 0x3d, 0x84,
	0x76, 0x61, 0x75, 0x44, 0x6f, 0xa7, 0x2b, 0xa4, 0x97, 0x9d, 0x21, 0xd1, 0x97, 0x5e, 0x1c, 0xaa,
	0x46, 0xf2, 0x04, 0x82, 0xa6, 0x4a, 0x0c, 0x25, 0x8b, 0x7f, 0x4d, 0x78, 0xd2, 0x24, 0xda, 0x40,
	0xb5, 0x35, 0xe3, 0x67, 0xf0, 0xed, 0xe4, 0x6f, 0x70, 0xe0, 0xe0, 0x2f, 0x34, 0x99, 0x23, 0x04,
	0x17, 0xdb, 0xdc, 0x5a, 0x57, 0xcd, 0xeb, 0x5d, 0xdc, 0xe5, 0xe5, 0x7f, 0xe1, 0x35, 0x79, 0x63,
	0xc0, 0x1d, 0xf7, 0xfa, 0xf6, 0x6e, 0xb1, 0xda, 0xe7, 0x8f, 0xc8, 0x63, 0x3b, 0x84, 0x0c, 0xff,
	0xed, 0xbe, 0xd9, 0xdc, 0x52, 0xf4, 0xb7, 0x95, 0xed, 0xb3, 0xcf, 0xc0, 0xb3, 0xff, 0x2c, 0x6c,
	0x9d, 0x39, 0x9e, 0xac, 0x3b, 0xb7, 0x10, 0xb6, 0x39, 0x19, 0xac, 0xf8, 0xa8, 0xb5, 0xa3, 0x13,
	0x24, 0x66, 0xfe, 0x43, 0x6f, 0x7f, 0xb9, 0x19, 0xb8, 0x5b, 0xbe, 0xfa, 0x0c, 0x00, 0x00, 0xff,
	0xff, 0xae, 0x6b, 0x7c, 0xa0, 0x23, 0x03, 0x00, 0x00,
}
