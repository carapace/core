// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discovery.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type APIProtocol int32

const (
	APIProtocol_MSGProtocolUnknown APIProtocol = 0
	APIProtocol_HTTP               APIProtocol = 1
	APIProtocol_GRPC               APIProtocol = 2
)

var APIProtocol_name = map[int32]string{
	0: "MSGProtocolUnknown",
	1: "HTTP",
	2: "GRPC",
}
var APIProtocol_value = map[string]int32{
	"MSGProtocolUnknown": 0,
	"HTTP":               1,
	"GRPC":               2,
}

func (x APIProtocol) String() string {
	return proto.EnumName(APIProtocol_name, int32(x))
}
func (APIProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_discovery_790fe649aeb2749b, []int{0}
}

type ServiceType int32

const (
	ServiceType_ServiceTypeUnknown ServiceType = 0
	ServiceType_ArkNodeV1          ServiceType = 1
	ServiceType_ArkNodeV2          ServiceType = 2
)

var ServiceType_name = map[int32]string{
	0: "ServiceTypeUnknown",
	1: "ArkNodeV1",
	2: "ArkNodeV2",
}
var ServiceType_value = map[string]int32{
	"ServiceTypeUnknown": 0,
	"ArkNodeV1":          1,
	"ArkNodeV2":          2,
}

func (x ServiceType) String() string {
	return proto.EnumName(ServiceType_name, int32(x))
}
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_discovery_790fe649aeb2749b, []int{1}
}

type ServiceResponse struct {
	Service              *Service  `protobuf:"bytes,1,opt,name=Service,proto3" json:"Service,omitempty"`
	Response             *Response `protobuf:"bytes,2,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ServiceResponse) Reset()         { *m = ServiceResponse{} }
func (m *ServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceResponse) ProtoMessage()    {}
func (*ServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_discovery_790fe649aeb2749b, []int{0}
}
func (m *ServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceResponse.Unmarshal(m, b)
}
func (m *ServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceResponse.Marshal(b, m, deterministic)
}
func (dst *ServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceResponse.Merge(dst, src)
}
func (m *ServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceResponse.Size(m)
}
func (m *ServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceResponse proto.InternalMessageInfo

func (m *ServiceResponse) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ServiceResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

type Service struct {
	Protocol             APIProtocol `protobuf:"varint,1,opt,name=Protocol,proto3,enum=v1.discovery.APIProtocol" json:"Protocol,omitempty"`
	Type                 ServiceType `protobuf:"varint,2,opt,name=Type,proto3,enum=v1.discovery.ServiceType" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_discovery_790fe649aeb2749b, []int{1}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetProtocol() APIProtocol {
	if m != nil {
		return m.Protocol
	}
	return APIProtocol_MSGProtocolUnknown
}

func (m *Service) GetType() ServiceType {
	if m != nil {
		return m.Type
	}
	return ServiceType_ServiceTypeUnknown
}

type GetServiceMSG struct {
	Protocol             APIProtocol `protobuf:"varint,1,opt,name=Protocol,proto3,enum=v1.discovery.APIProtocol" json:"Protocol,omitempty"`
	Type                 ServiceType `protobuf:"varint,2,opt,name=Type,proto3,enum=v1.discovery.ServiceType" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetServiceMSG) Reset()         { *m = GetServiceMSG{} }
func (m *GetServiceMSG) String() string { return proto.CompactTextString(m) }
func (*GetServiceMSG) ProtoMessage()    {}
func (*GetServiceMSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_discovery_790fe649aeb2749b, []int{2}
}
func (m *GetServiceMSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceMSG.Unmarshal(m, b)
}
func (m *GetServiceMSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceMSG.Marshal(b, m, deterministic)
}
func (dst *GetServiceMSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceMSG.Merge(dst, src)
}
func (m *GetServiceMSG) XXX_Size() int {
	return xxx_messageInfo_GetServiceMSG.Size(m)
}
func (m *GetServiceMSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceMSG.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceMSG proto.InternalMessageInfo

func (m *GetServiceMSG) GetProtocol() APIProtocol {
	if m != nil {
		return m.Protocol
	}
	return APIProtocol_MSGProtocolUnknown
}

func (m *GetServiceMSG) GetType() ServiceType {
	if m != nil {
		return m.Type
	}
	return ServiceType_ServiceTypeUnknown
}

func init() {
	proto.RegisterType((*ServiceResponse)(nil), "v1.discovery.ServiceResponse")
	proto.RegisterType((*Service)(nil), "v1.discovery.Service")
	proto.RegisterType((*GetServiceMSG)(nil), "v1.discovery.GetServiceMSG")
	proto.RegisterEnum("v1.discovery.APIProtocol", APIProtocol_name, APIProtocol_value)
	proto.RegisterEnum("v1.discovery.ServiceType", ServiceType_name, ServiceType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceDiscoveryClient is the client API for ServiceDiscovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceDiscoveryClient interface {
	GetService(ctx context.Context, in *GetServiceMSG, opts ...grpc.CallOption) (*ServiceResponse, error)
	Register(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Response, error)
}

type serviceDiscoveryClient struct {
	cc *grpc.ClientConn
}

func NewServiceDiscoveryClient(cc *grpc.ClientConn) ServiceDiscoveryClient {
	return &serviceDiscoveryClient{cc}
}

func (c *serviceDiscoveryClient) GetService(ctx context.Context, in *GetServiceMSG, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/v1.discovery.ServiceDiscovery/GetService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceDiscoveryClient) Register(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/v1.discovery.ServiceDiscovery/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceDiscoveryServer is the server API for ServiceDiscovery service.
type ServiceDiscoveryServer interface {
	GetService(context.Context, *GetServiceMSG) (*ServiceResponse, error)
	Register(context.Context, *Service) (*Response, error)
}

func RegisterServiceDiscoveryServer(s *grpc.Server, srv ServiceDiscoveryServer) {
	s.RegisterService(&_ServiceDiscovery_serviceDesc, srv)
}

func _ServiceDiscovery_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceMSG)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceDiscoveryServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.discovery.ServiceDiscovery/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceDiscoveryServer).GetService(ctx, req.(*GetServiceMSG))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceDiscovery_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceDiscoveryServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.discovery.ServiceDiscovery/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceDiscoveryServer).Register(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceDiscovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.discovery.ServiceDiscovery",
	HandlerType: (*ServiceDiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetService",
			Handler:    _ServiceDiscovery_GetService_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _ServiceDiscovery_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovery.proto",
}

func init() { proto.RegisterFile("discovery.proto", fileDescriptor_discovery_790fe649aeb2749b) }

var fileDescriptor_discovery_790fe649aeb2749b = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0xdf, 0x4b, 0xbb, 0x50,
	0x14, 0xff, 0x2a, 0xf2, 0xcd, 0x8e, 0x6d, 0xbb, 0x1c, 0x28, 0x96, 0x11, 0x84, 0x4f, 0x31, 0xc8,
	0xd0, 0x08, 0xea, 0x71, 0x2d, 0x70, 0x3d, 0x2c, 0x44, 0xad, 0x87, 0x1e, 0x73, 0x97, 0x90, 0x85,
	0x57, 0xae, 0xce, 0xd8, 0x3f, 0xd2, 0xdf, 0x1b, 0x3a, 0xaf, 0x5e, 0xc9, 0xe7, 0xde, 0x3c, 0xe7,
	0x7c, 0x7e, 0x5c, 0xcf, 0xf9, 0xc0, 0x64, 0x9d, 0xe4, 0x31, 0x2b, 0x29, 0xdf, 0xd9, 0x19, 0x67,
	0x05, 0xc3, 0xa3, 0xd2, 0xb1, 0xdb, 0x9e, 0x39, 0xe6, 0x34, 0xcf, 0x58, 0x9a, 0xd3, 0xfd, 0xd4,
	0xda, 0xc2, 0x24, 0xa4, 0xbc, 0x4c, 0x62, 0x1a, 0x34, 0x03, 0xbc, 0x86, 0x83, 0xa6, 0x35, 0x55,
	0x2e, 0x94, 0x4b, 0xc3, 0x3d, 0xb6, 0x65, 0x09, 0x5b, 0xe0, 0x05, 0x0a, 0x1d, 0xd0, 0x05, 0x79,
	0xaa, 0x76, 0x8c, 0xd6, 0x49, 0x0c, 0x83, 0x16, 0x66, 0xb1, 0xd6, 0x03, 0x6f, 0x41, 0xf7, 0xab,
	0xa7, 0xc4, 0xec, 0xb3, 0xf6, 0x1b, 0xbb, 0xa7, 0x7d, 0xbf, 0xb9, 0xff, 0x24, 0x00, 0x41, 0x0b,
	0xc5, 0x2b, 0xd0, 0xa2, 0x5d, 0xb6, 0x37, 0xfc, 0x45, 0x69, 0xb4, 0x2b, 0x40, 0x50, 0xc3, 0xac,
	0x2d, 0x8c, 0x3c, 0x5a, 0x34, 0xfd, 0x55, 0xe8, 0xfd, 0x8d, 0xed, 0xec, 0x1e, 0x0c, 0x49, 0x07,
	0x4f, 0x00, 0x57, 0xa1, 0x27, 0xca, 0x97, 0x74, 0x93, 0xb2, 0xaf, 0x94, 0xfc, 0x43, 0x1d, 0xb4,
	0x65, 0x14, 0xf9, 0x44, 0xa9, 0xbe, 0xbc, 0xc0, 0x5f, 0x10, 0x75, 0xb6, 0x00, 0x43, 0xd2, 0xab,
	0xa8, 0x52, 0xd9, 0x51, 0x47, 0x70, 0x38, 0xe7, 0x9b, 0x67, 0xb6, 0xa6, 0xaf, 0x0e, 0x51, 0xe4,
	0xd2, 0x25, 0xaa, 0xfb, 0xad, 0x00, 0x69, 0x68, 0x8f, 0xe2, 0x99, 0xb8, 0x04, 0xe8, 0x76, 0x81,
	0x67, 0xfd, 0x7f, 0xe8, 0x6d, 0xc9, 0x3c, 0x1f, 0x3e, 0xbd, 0x88, 0xca, 0x5d, 0x75, 0xf9, 0x8f,
	0x24, 0x2f, 0x28, 0xc7, 0xe1, 0x94, 0x98, 0xc3, 0x51, 0x78, 0xd0, 0xde, 0xd4, 0xd2, 0x79, 0xff,
	0x5f, 0x87, 0xf0, 0xe6, 0x27, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x8c, 0x75, 0x1f, 0xb5, 0x02, 0x00,
	0x00,
}
