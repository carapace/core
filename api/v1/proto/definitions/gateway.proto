syntax="proto3";
package IAM;
option go_package = "v1";

import "definitions/assets.proto";
import "definitions/response.proto";


message NodePost {
    Asset Asset = 1;
    string Version = 2; // some cryptos switches versions aka v1, v2. This is a cryptocurrency specific identifier.
                        // interpretation of this field is not defined and gateway server specific

    string Endpoint = 3;
    repeated string Headers = 4;
    bytes Body = 5; // JSON payload, also node specific
    bool Repeatable = 6; // if it is save to rebroadcast the message, or broadcast it to multiple nodes.
}


message NodeGet {
    Asset Asset = 1;
    string Version = 2; // some cryptos switches versions aka v1, v2. This is a cryptocurrency specific identifier.
    // interpretation of this field is not defined and gateway server specific

    string Endpoint = 3;
    repeated string Headers = 4;
    bytes Body = 5; // JSON payload, also node specific
    bool Repeatable = 6; // if it is save to rebroadcast the message, or broadcast it to multiple nodes.
}


message NodeResponse {
    repeated bytes Results = 5; // JSON payload, also node specific, possibly multiple if repeatable was set to true
    Response.Response Response = 7;
}

message Node {
    Asset Asset = 1;
    string Host = 2;
    string Port = 3;
    string Version = 4;
}


service NodeGatewayService {
    rpc Post(NodePost) returns (NodeResponse);
    rpc Get(NodeGet) returns (NodeResponse);
    rpc Register(Node) returns (Response.Response);
}